#pragma once
#define WINDOW_WIDTH 800
#define WINDOW_HEIGHT 600

#include <iostream>
#include <SDL2/SDL.h>
#include <SDL2/SDL_ttf.h>
#include <SDL2/SDL_image.h>
#include "squishy_array.hpp"

class SDL_Screen {
public:
	SDL_Screen();
	~SDL_Screen();
	void clearScreen(void);
	void finishDrawing(void);
	void drawText(char* inputText, int x, int y, float textSize);
	void drawImage(int imageId, int x, int y, int width, int height);
	void flipImage(int imageId);
	void drawRectangle(int x, int y, int width, int height, int color);
	void drawImageWithDir(int imageId, int x, int y, int width, int height, bool flip);
private:
	//window rend vars
	SDL_Window *window = NULL;
	SDL_Surface *screen = NULL;
	SDL_Renderer *rend = NULL;
	//text vars
	TTF_Font* font;
	SDL_Surface* textSurf;
	SDL_Texture* textTexture;
	SDL_Rect textRect;
	const int text_load_size = 20;//px
	void loadTexture(char* filePath);
};

enum imageNums {
	IMAGE_BG_TITLESCREEN = 0,
	IMAGE_PLAYER_WARIO,
	IMAGE_BG_LEVEL,
	IMAGE_TILE_TOP_GRASS,
	IMAGE_HITBOX_RECTANGLE,
	IMAGE_TILE_TOP_GRASS_RIGHT,
	IMAGE_TILE_TOP_GRASS_LEFT,
	IMAGE_TILE_MIDDLE_GRASS_MIDDLE,
	IMAGE_TILE_MIDDLE_GRASS_RIGHT,
	IMAGE_TILE_MIDDLE_GRASS_LEFT,
	IMAGE_TILE_BOTTOM_GRASS_MIDDLE,
	IMAGE_TILE_BOTTOM_GRASS_RIGHT,
	IMAGE_TILE_BOTTOM_GRASS_LEFT,
	IMAGE_TILE_CONNECTOR_1,
	IMAGE_TILE_CONNECTOR_2,
	IMAGE_TILE_CONNECTOR_3,
	IMAGE_TILE_CONNECTOR_4,
	IMAGE_UNKNOWN,
	GOLD_COIN_ROTATION_1,
	IMAGE_DOOR_TOP,
	IMAGE_DOOR_BOTTOM,
	IMAGE_TILE_GRASS_DIRT_BG,
	IMAGE_TILE_GRASS_DIRT_BG_SHADOW,
	IMAGE_PLAYER_WARIO_FALL,
	IMAGE_PLAYER_WARIO_WALK_1,
	IMAGE_PLAYER_WARIO_WALK_2,
	IMAGE_PLAYER_WARIO_WALK_3,
	IMAGE_PLAYER_WARIO_WALK_4,
	IMAGE_TILE_GRASS_SEM_PLT,
	IMAGE_TILE_MIDDLE_LOG_FAR_LEFT,
	IMAGE_TILE_MIDDLE_LOG_INNER_LEFT,
	IMAGE_TILE_MIDDLE_LOG_INNER_RIGHT,
	IMAGE_TILE_MIDDLE_LOG_FAR_RIGHT,
	IMAGE_TILE_BOTTOM_LOG_FAR_LEFT,
	IMAGE_TILE_BOTTOM_LOG_INNER_LEFT,
	IMAGE_TILE_BOTTOM_LOG_INNER_RIGHT,
	IMAGE_TILE_BOTTOM_LOG_FAR_RIGHT,
	IMAGE_TILE_PURPLE_BLOCK_SMALL_CRACKS,
	IMAGE_PLAYER_WARIO_BASH_1,
	IMAGE_PLAYER_WARIO_BASH_2,
	IMAGE_PLAYER_WARIO_BASH_3,
	IMAGE_PLAYER_WARIO_BASH_4,
	IMAGE_PLAYER_WARIO_BASH_5,
	IMAGE_PLAYER_WARIO_BASH_6,
	IMAGE_PLAYER_WARIO_BASH_7,
	IMAGE_PLAYER_WARIO_BASH_8,
	IMAGE_PLAYER_WARIO_BASH_JUMP,
	IMAGE_PLAYER_WARIO_GROUND_POUND1,
	IMAGE_PLAYER_WARIO_CROUCH_1,
	IMAGE_PLAYER_WARIO_CROUCH_2,
	IMAGE_PLAYER_WARIO_CROUCH_3,
	IMAGE_TILE_GRASS_DIRT_LADDER,
	IMAGE_PLAYER_WARIO_CLIMB_1,
	IMAGE_PLAYER_WARIO_CLIMB_2,
	IMAGE_PLAYER_WARIO_CLIMB_3,
	IMAGE_PLAYER_WARIO_CLIMB_4,
	IMAGE_PLAYER_WARIO_CLIMB_5,
	IMAGE_PLAYER_WARIO_CLIMB_6,
	IMAGE_TILE_WATER_MIDDLE,
	IMAGE_TILE_WATER_TOP_1,
	IMAGE_TILE_WATER_TOP_2,
	IMAGE_TILE_WATER_TOP_3,
	IMAGE_TILE_WATER_TOP_4,
	IMAGE_PLAYER_WARIO_SWIM_1,
	IMAGE_PLAYER_WARIO_SWIM_2,
	IMAGE_PLAYER_WARIO_SWIM_3,
	IMAGE_PLAYER_WARIO_SWIM_4,
	IMAGE_PLAYER_WARIO_SWIM_5,
};

enum RECT_COLORS {
	CLR_BLU = 0,
	CLR_WHT,
	CLR_RED,
	CLR_GRN,
	CLR_BLK,
	CLR_YLW,
	CLR_GRY
};